#!/usr/bin/env ruby

include Process

EXECUTABLE = File.expand_path("../../core/hash", __FILE__)
RES_DIR = File.expand_path("../../results", __FILE__)
THREADS_NUM = 4

def spawn_process args
  print '.'
  spawn(EXECUTABLE, *args.map(&:to_s), chdir: RES_DIR)
end

Dir.mkdir(RES_DIR) unless Dir.exists?(RES_DIR)

p_sizes = [20, 200, 2000, 20000].map { |i|
  (i..(i * 10)).step(i).to_a
}.flatten.uniq.reverse

queue = p_sizes.map{ |sz| [["--dig", sz], ["--shift", sz]] }.reduce(&:+)
running = []

while queue.any? || running.any?
  begin
    if running.size >= THREADS_NUM || queue.empty?
      running -= [wait]
    else
      running << spawn_process(queue.pop)
    end
  rescue
  end
end

puts ""
