#!/usr/bin/env ruby

require File.join(File.dirname(__FILE__), 'key_exchange_client.rb')

def wrong_usage
  STDERR.puts "Wrong arguments.\nUsage: ./key_exchanger a=<a>, b=<b>, m=<m>"
  exit
end

params_hash = Hash[ *ARGV.join.split(?,).map{ |el| [el.split(?=)[0], el.split(?=)[1]] }.flatten ]
wrong_usage unless params_hash.has_key?('a') && params_hash.has_key?('b') && params_hash.has_key?('m')
a = params_hash['a'].to_i; b = params_hash['b'].to_i; m = params_hash['m'].to_i

eg = EllipticGroup.new a, b, m
g, c = eg.elements.map{ |p| [p, eg.order(p)] }.max_by{ |p, order| Math::prime?(order) ? order : 0 }
puts "Elliptic group: a=#{a}, b=#{b}, m=#{m}"
puts "c: #{c}"
puts "G: #{g.to_s}"

puts '**********************************'

a = KeyExchangeClient.new eg, g
puts "A secret key: #{a.n}"
puts "A open key: #{a.p.to_s}"

puts '**********************************'

b = KeyExchangeClient.new eg, g
puts "B secret key: #{b.n}"
puts "B open key: #{b.p.to_s}"

puts '**********************************'

a.calc_k b.p
b.calc_k a.p
puts "A shared key: #{a.k.to_s}"
puts "B shared key: #{b.k.to_s}"
