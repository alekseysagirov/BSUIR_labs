#! /usr/bin/env ruby

require File.join(File.dirname(__FILE__), 'perceptron.rb')

class_count = ARGV[0].to_i
attr_count = ARGV[1].to_i
training_points_per_class_count = ARGV[2].to_i

puts "Generating valid data for perceptron..."
begin
  samples = []
  class_count.times do |c_ind|
    cl_samples = []
    training_points_per_class_count.times do |p_ind|
      vec = Vector[ *Array.new(attr_count){ rand(-10..10) } ]
      cl_samples << vec
    end
    samples << cl_samples
  end

  perc = Perceptron.try_build_by_samples(class_count, attr_count, samples)
end until perc

puts "Build success!"

puts "Training samples:"
puts samples.map.with_index{ |cl_samples, i| "#{i+1} class:\n#{cl_samples.map(&:to_a).map(&:to_s).join("\n")}" }.join("\n")

puts "Splitting functions:"
func_str = perc.w.to_a.map do |row|
  row.map.with_index do |el, i|
    if i < row.size - 1
      "#{el<0 ? ?- : ?+}"+"#{el.abs}*X#{i}".rjust(6)
    else
      "#{el<0 ? ?- : ?+}"+"#{el.abs}".rjust(6)
    end
  end.join(' ')
end.join("\n")
puts func_str

while true do
  puts "Please enter #{attr_count} numbers to test or 'q' to quit"
  str = $stdin.gets.chomp
  if str[0] == 'q'
    exit
  end
  vec = Vector[ *str.split.map(&:to_i) ]
  puts "Perceptron answer: #{perc.recognize(vec) + 1}"
  puts
end

